version: '2.2'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    container_name: elasticsearch2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    networks:
      - esnet
  ui-app:
    image:  mthomas/7-6-project
    container_name: ui_app
    depends_on:
      - node-api
    links:
      - node-api:api.local
    ports:
      - "3000:3000"
      - "3001:3001"
    volumes:
      - ../7-6-project/src:/usr/src/app/src
    networks: 
      - esnet
  node-medusa:
    image:  mthomas/medusa
    container_name: medusa
    depends_on: 
      - postgres-0
      - postgres-1
    links:
      - postgres-0:db0.local
      - postgres-1:db1.local
      - elasticsearch:es0.local
    volumes:
      - ../medusa/src:/usr/src/app/src
    environment:
      DATABASE_URL: "postgres://postgres:swordfish@db0.local:5432"
    ports:
      - "6666:6666"
    networks: 
      - esnet
  node-api:
    image:  mthomas/node-api
    container_name: node_api_app
    depends_on: 
      - postgres-0
      - postgres-1
    links:
      - postgres-0:db0.local
      - postgres-1:db1.local
      - elasticsearch:es0.local
    environment:
      DATABASE_URL: "postgres://postgres:swordfish@db0.local:5432"
    ports:
      - "8888:8888"
    volumes:
      - ./sql:/sql
    networks: 
      - esnet
  postgres-0:
    image: postgres:10.4-alpine
    container_name: postgres_0
    working_dir: /sql
    volumes:
      - ./sql:/sql
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: swordfish
    networks:
      - esnet
  postgres-1:
    image: postgres:10.4-alpine
    container_name: postgres_1
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: swordfish
    networks: 
      - esnet

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local

networks:
  esnet: